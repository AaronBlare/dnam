# @package _global_

data_type: 1st_day
model_type: lightgbm # xgboost catboost lightgbm
outcome: class_simp

experiment_type: quasi

out_dim: 2

project_name: ${data_type}_${experiment_type}_trn_val_${model_type}

seed: 42

cv_is_split: False
cv_n_splits: 5
cv_n_repeats: 10

optimized_metric: "f1_score_weighted"
optimized_part: "val"
direction: "max"

is_shuffle: True

debug: False
print_config: True
ignore_warnings: True
test_after_training: True

max_epochs: 10000
patience: 300

base_dir: "C:/YandexDisk/EEG/experiments/${data_type}"
work_dir: "${base_dir}/models/${project_name}"
data_dir: "${base_dir}"

# SHAP values
is_shap: False
is_shap_save: True
shap_explainer: Tree # Tree Kernel Deep
shap_bkgrd: tree_path_dependent # trn all tree_path_dependent

# LIME weights
is_lime: False
lime_bkgrd: trn # trn all
lime_num_features: 20 # 10 all
lime_save_weights: True

# Plot params
num_top_features: 10
num_examples: 5

# specify here default training configuration
defaults:
  - _self_
  - override /trainer: null # choose trainer from 'configs/trainer/'
  - override /model: null
  - override /datamodule: null
  - override /callbacks: none.yaml
  - override /logger: many_loggers.yaml # set logger here or use command line (e.g. `python run.py logger=wandb`)
  - override /hydra/hydra_logging: colorlog
  - override /hydra/job_logging: colorlog

datamodule:
  _target_: src.datamodules.unn.UNNDataModuleNoTest
  task: "multiclass"
  features_fn: "${data_dir}/features_freq.xlsx"
  cat_features_fn: ""
  cat_encoding: ""
  classes_fn: "${data_dir}/classes/${experiment_type}.xlsx"
  trn_val_fn: "${data_dir}/data.pkl"
  outcome: ${outcome}
  split_feature: subject
  split_column: split
  batch_size: 64
  num_workers: 0
  pin_memory: False
  seed: ${seed}
  weighted_sampler: True
  imputation: fast_knn
  k: 1

# XGBoost model params
xgboost:
  output_dim: ${out_dim}
  booster: 'gbtree'
  learning_rate: 0.05
  max_depth: 5
  gamma: 0
  sampling_method: 'uniform'
  subsample: 1
  objective: 'multi:softprob'
  verbosity: 0
  eval_metric: 'mlogloss'
  max_epochs: ${max_epochs}
  patience: ${patience}

# CatBoost model params
catboost:
  output_dim: ${out_dim}
  loss_function: 'MultiClass'
  learning_rate: 0.05
  depth: 5
  min_data_in_leaf: 6
  max_leaves: 31
  task_type: 'CPU'
  verbose: 0
  max_epochs: ${max_epochs}
  patience: ${patience}

# LightGBM model params
lightgbm:
  output_dim: ${out_dim}
  objective: 'multiclass'
  boosting: 'gbdt'
  learning_rate: 0.1
  num_leaves: 31
  device: 'cpu'
  max_depth: -1
  min_data_in_leaf: 1
  feature_fraction: 0.8
  bagging_fraction: 0.8
  bagging_freq: 5
  verbose: -1
  metric: 'multi_logloss'
  max_epochs: ${max_epochs}
  patience: ${patience}