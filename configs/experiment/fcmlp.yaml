# @package _global_

project_name: fcmlp

seed: 1337

is_cv: False
is_stratified: True
n_splits: 5

# path to original working directory
# hydra hijacks working directory by changing it to the current log directory,
# so it's useful to have this path as a special variable
# learn more here: https://hydra.cc/docs/next/tutorials/basic/running_your_app/working_directory
work_dir: "E:/YandexDisk/Work/pydnameth/datasets/meta/BrainDiseases/variance(0.005)/models/${project_name}" #${hydra:runtime.cwd}

# path to folder with data
data_dir: "E:/YandexDisk/Work/pydnameth/datasets/meta/BrainDiseases/variance(0.005)"

# use `python run.py debug=true` for easy debugging!
# this will run 1 train, val and test loop with only 1 batch
# equivalent to running `python run.py trainer.fast_dev_run=true`
# (this is placed here just for easier access from command line)
debug: False

# pretty print config at the start of the run using Rich library
print_config: True

# disable python warnings if they annoy you
ignore_warnings: True

# check performance on test set, using the best model achieved during training
# lightning chooses best model based on metric specified in checkpoint callback
test_after_training: True


# specify here default training configuration
defaults:
  # override hydra: default.yaml

  - override /trainer: default.yaml # choose trainer from 'configs/trainer/'
  - override /model: fcmlp.yaml
  - override /datamodule: betas_pheno_datamodule.yaml
  - override /callbacks: regular.yaml
  - override /logger: many_loggers.yaml # set logger here or use command line (e.g. `python run.py logger=wandb`)

  - override /hydra/hydra_logging: colorlog
  - override /hydra/job_logging: colorlog

trainer:
  min_epochs: 1
  max_epochs: 1000

datamodule:
  batch_size: 64
